{"version":3,"file":"jr-family-tree-7c106176.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/lit-html/directives/style-map.js","../node_modules/page/page.mjs","../out-tsc/src/JrFamilyTree.js","../out-tsc/src/components/JrTree.js","../out-tsc/src/components/JrMainPerson.js","../out-tsc/src/components/JrPerson.js","../out-tsc/src/jr-family-tree.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(slotName = '', flatten = false) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n                const slot = this.renderRoot.querySelector(selector);\n                return slot && slot.assignedNodes({ flatten });\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst previousStylePropertyCache = new WeakMap();\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS properties. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'style' || part.committer.parts.length > 1) {\n        throw new Error('The `styleMap` directive must be used in the style attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { style } = committer.element;\n    let previousStyleProperties = previousStylePropertyCache.get(part);\n    if (previousStyleProperties === undefined) {\n        // Write static styles once\n        style.cssText = committer.strings.join(' ');\n        previousStylePropertyCache.set(part, previousStyleProperties = new Set());\n    }\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousStyleProperties.forEach((name) => {\n        if (!(name in styleInfo)) {\n            previousStyleProperties.delete(name);\n            if (name.indexOf('-') === -1) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                style[name] = null;\n            }\n            else {\n                style.removeProperty(name);\n            }\n        }\n    });\n    // Add or update properties\n    for (const name in styleInfo) {\n        previousStyleProperties.add(name);\n        if (name.indexOf('-') === -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            style[name] = styleInfo[name];\n        }\n        else {\n            style.setProperty(name, styleInfo[name]);\n        }\n    }\n});\n//# sourceMappingURL=style-map.js.map","var isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {String} str\n * @return {Array}\n */\nfunction parse (str) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var suffix = res[6];\n    var asterisk = res[7];\n\n    var repeat = suffix === '+' || suffix === '*';\n    var optional = suffix === '?' || suffix === '*';\n    var delimiter = prefix || '/';\n    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?');\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: escapeGroup(pattern)\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {String}   str\n * @return {Function}\n */\nfunction compile (str) {\n  return tokensToFunction(parse(str))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^' + tokens[i].pattern + '$');\n    }\n  }\n\n  return function (obj) {\n    var path = '';\n    var data = obj || {};\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received \"' + value + '\"')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encodeURIComponent(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = encodeURIComponent(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {String} str\n * @return {String}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {String} group\n * @return {String}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {RegExp} re\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {String}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {RegExp} path\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {Array}  path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {String} path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  var tokens = parse(path);\n  var re = tokensToRegExp(tokens, options);\n\n  // Attach keys back to the regexp.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] !== 'string') {\n      keys.push(tokens[i]);\n    }\n  }\n\n  return attachKeys(re, keys)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {Array}  tokens\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction tokensToRegExp (tokens, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n  var lastToken = tokens[tokens.length - 1];\n  var endsWithSlash = typeof lastToken === 'string' && /\\/$/.test(lastToken);\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = token.pattern;\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (prefix) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\\\/(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithSlash ? '' : '(?=\\\\/|$)';\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(String|RegExp|Array)} path\n * @param  {Array}                 [keys]\n * @param  {Object}                [options]\n * @return {RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  keys = keys || [];\n\n  if (!isarray(keys)) {\n    options = keys;\n    keys = [];\n  } else if (!options) {\n    options = {};\n  }\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys, options)\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(path, keys, options)\n  }\n\n  return stringToRegexp(path, keys, options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n   * Module dependencies.\n   */\n\n  \n\n  /**\n   * Short-cuts for global-object checks\n   */\n\n  var hasDocument = ('undefined' !== typeof document);\n  var hasWindow = ('undefined' !== typeof window);\n  var hasHistory = ('undefined' !== typeof history);\n  var hasProcess = typeof process !== 'undefined';\n\n  /**\n   * Detect click event\n   */\n  var clickEvent = hasDocument && document.ontouchstart ? 'touchstart' : 'click';\n\n  /**\n   * To work properly with the URL\n   * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n   */\n\n  var isLocation = hasWindow && !!(window.history.location || window.location);\n\n  /**\n   * The page instance\n   * @api private\n   */\n  function Page() {\n    // public things\n    this.callbacks = [];\n    this.exits = [];\n    this.current = '';\n    this.len = 0;\n\n    // private things\n    this._decodeURLComponents = true;\n    this._base = '';\n    this._strict = false;\n    this._running = false;\n    this._hashbang = false;\n\n    // bound functions\n    this.clickHandler = this.clickHandler.bind(this);\n    this._onpopstate = this._onpopstate.bind(this);\n  }\n\n  /**\n   * Configure the instance of page. This can be called multiple times.\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  Page.prototype.configure = function(options) {\n    var opts = options || {};\n\n    this._window = opts.window || (hasWindow && window);\n    this._decodeURLComponents = opts.decodeURLComponents !== false;\n    this._popstate = opts.popstate !== false && hasWindow;\n    this._click = opts.click !== false && hasDocument;\n    this._hashbang = !!opts.hashbang;\n\n    var _window = this._window;\n    if(this._popstate) {\n      _window.addEventListener('popstate', this._onpopstate, false);\n    } else if(hasWindow) {\n      _window.removeEventListener('popstate', this._onpopstate, false);\n    }\n\n    if (this._click) {\n      _window.document.addEventListener(clickEvent, this.clickHandler, false);\n    } else if(hasDocument) {\n      _window.document.removeEventListener(clickEvent, this.clickHandler, false);\n    }\n\n    if(this._hashbang && hasWindow && !hasHistory) {\n      _window.addEventListener('hashchange', this._onpopstate, false);\n    } else if(hasWindow) {\n      _window.removeEventListener('hashchange', this._onpopstate, false);\n    }\n  };\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {string} path\n   * @api public\n   */\n\n  Page.prototype.base = function(path) {\n    if (0 === arguments.length) return this._base;\n    this._base = path;\n  };\n\n  /**\n   * Gets the `base`, which depends on whether we are using History or\n   * hashbang routing.\n\n   * @api private\n   */\n  Page.prototype._getBase = function() {\n    var base = this._base;\n    if(!!base) return base;\n    var loc = hasWindow && this._window && this._window.location;\n\n    if(hasWindow && this._hashbang && loc && loc.protocol === 'file:') {\n      base = loc.pathname;\n    }\n\n    return base;\n  };\n\n  /**\n   * Get or set strict path matching to `enable`\n   *\n   * @param {boolean} enable\n   * @api public\n   */\n\n  Page.prototype.strict = function(enable) {\n    if (0 === arguments.length) return this._strict;\n    this._strict = enable;\n  };\n\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  Page.prototype.start = function(options) {\n    var opts = options || {};\n    this.configure(opts);\n\n    if (false === opts.dispatch) return;\n    this._running = true;\n\n    var url;\n    if(isLocation) {\n      var window = this._window;\n      var loc = window.location;\n\n      if(this._hashbang && ~loc.hash.indexOf('#!')) {\n        url = loc.hash.substr(2) + loc.search;\n      } else if (this._hashbang) {\n        url = loc.search + loc.hash;\n      } else {\n        url = loc.pathname + loc.search + loc.hash;\n      }\n    }\n\n    this.replace(url, null, true, opts.dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  Page.prototype.stop = function() {\n    if (!this._running) return;\n    this.current = '';\n    this.len = 0;\n    this._running = false;\n\n    var window = this._window;\n    this._click && window.document.removeEventListener(clickEvent, this.clickHandler, false);\n    hasWindow && window.removeEventListener('popstate', this._onpopstate, false);\n    hasWindow && window.removeEventListener('hashchange', this._onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} dispatch\n   * @param {boolean=} push\n   * @return {!Context}\n   * @api public\n   */\n\n  Page.prototype.show = function(path, state, dispatch, push) {\n    var ctx = new Context(path, state, this),\n      prev = this.prevContext;\n    this.prevContext = ctx;\n    this.current = ctx.path;\n    if (false !== dispatch) this.dispatch(ctx, prev);\n    if (false !== ctx.handled && false !== push) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Goes back in the history\n   * Back should always let the current route push state and then go back.\n   *\n   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n   * @param {Object=} state\n   * @api public\n   */\n\n  Page.prototype.back = function(path, state) {\n    var page = this;\n    if (this.len > 0) {\n      var window = this._window;\n      // this may need more testing to see if all browsers\n      // wait for the next tick to go back in history\n      hasHistory && window.history.back();\n      this.len--;\n    } else if (path) {\n      setTimeout(function() {\n        page.show(path, state);\n      });\n    } else {\n      setTimeout(function() {\n        page.show(page._getBase(), state);\n      });\n    }\n  };\n\n  /**\n   * Register route to redirect from one path to other\n   * or just redirect to another route\n   *\n   * @param {string} from - if param 'to' is undefined redirects to 'from'\n   * @param {string=} to\n   * @api public\n   */\n  Page.prototype.redirect = function(from, to) {\n    var inst = this;\n\n    // Define route from a path to another\n    if ('string' === typeof from && 'string' === typeof to) {\n      page.call(this, from, function(e) {\n        setTimeout(function() {\n          inst.replace(/** @type {!string} */ (to));\n        }, 0);\n      });\n    }\n\n    // Wait for the push state and replace it with another\n    if ('string' === typeof from && 'undefined' === typeof to) {\n      setTimeout(function() {\n        inst.replace(from);\n      }, 0);\n    }\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} init\n   * @param {boolean=} dispatch\n   * @return {!Context}\n   * @api public\n   */\n\n\n  Page.prototype.replace = function(path, state, init, dispatch) {\n    var ctx = new Context(path, state, this),\n      prev = this.prevContext;\n    this.prevContext = ctx;\n    this.current = ctx.path;\n    ctx.init = init;\n    ctx.save(); // save before dispatching, which may redirect\n    if (false !== dispatch) this.dispatch(ctx, prev);\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n\n  Page.prototype.dispatch = function(ctx, prev) {\n    var i = 0, j = 0, page = this;\n\n    function nextExit() {\n      var fn = page.exits[j++];\n      if (!fn) return nextEnter();\n      fn(prev, nextExit);\n    }\n\n    function nextEnter() {\n      var fn = page.callbacks[i++];\n\n      if (ctx.path !== page.current) {\n        ctx.handled = false;\n        return;\n      }\n      if (!fn) return unhandled.call(page, ctx);\n      fn(ctx, nextEnter);\n    }\n\n    if (prev) {\n      nextExit();\n    } else {\n      nextEnter();\n    }\n  };\n\n  /**\n   * Register an exit route on `path` with\n   * callback `fn()`, which will be called\n   * on the previous context when a new\n   * page is visited.\n   */\n  Page.prototype.exit = function(path, fn) {\n    if (typeof path === 'function') {\n      return this.exit('*', path);\n    }\n\n    var route = new Route(path, null, this);\n    for (var i = 1; i < arguments.length; ++i) {\n      this.exits.push(route.middleware(arguments[i]));\n    }\n  };\n\n  /**\n   * Handle \"click\" events.\n   */\n\n  /* jshint +W054 */\n  Page.prototype.clickHandler = function(e) {\n    if (1 !== this._which(e)) return;\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n    // ensure link\n    // use shadow dom when available if not, fall back to composedPath()\n    // for browsers that only have shady\n    var el = e.target;\n    var eventPath = e.path || (e.composedPath ? e.composedPath() : null);\n\n    if(eventPath) {\n      for (var i = 0; i < eventPath.length; i++) {\n        if (!eventPath[i].nodeName) continue;\n        if (eventPath[i].nodeName.toUpperCase() !== 'A') continue;\n        if (!eventPath[i].href) continue;\n\n        el = eventPath[i];\n        break;\n      }\n    }\n\n    // continue ensure link\n    // el.nodeName for svg links are 'a' instead of 'A'\n    while (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode;\n    if (!el || 'A' !== el.nodeName.toUpperCase()) return;\n\n    // check if link is inside an svg\n    // in this case, both href and target are always inside an object\n    var svg = (typeof el.href === 'object') && el.href.constructor.name === 'SVGAnimatedString';\n\n    // Ignore if tag has\n    // 1. \"download\" attribute\n    // 2. rel=\"external\" attribute\n    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\n    // ensure non-hash for the same path\n    var link = el.getAttribute('href');\n    if(!this._hashbang && this._samePath(el) && (el.hash || '#' === link)) return;\n\n    // Check for mailto: in the href\n    if (link && link.indexOf('mailto:') > -1) return;\n\n    // check target\n    // svg target is an object and its desired value is in .baseVal property\n    if (svg ? el.target.baseVal : el.target) return;\n\n    // x-origin\n    // note: svg links that are not relative don't call click events (and skip page.js)\n    // consequently, all svg links tested inside page.js are relative and in the same origin\n    if (!svg && !this.sameOrigin(el.href)) return;\n\n    // rebuild path\n    // There aren't .pathname and .search properties in svg links, so we use href\n    // Also, svg href is an object and its desired value is in .baseVal property\n    var path = svg ? el.href.baseVal : (el.pathname + el.search + (el.hash || ''));\n\n    path = path[0] !== '/' ? '/' + path : path;\n\n    // strip leading \"/[drive letter]:\" on NW.js on Windows\n    if (hasProcess && path.match(/^\\/[a-zA-Z]:\\//)) {\n      path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n    }\n\n    // same page\n    var orig = path;\n    var pageBase = this._getBase();\n\n    if (path.indexOf(pageBase) === 0) {\n      path = path.substr(pageBase.length);\n    }\n\n    if (this._hashbang) path = path.replace('#!', '');\n\n    if (pageBase && orig === path && (!isLocation || this._window.location.protocol !== 'file:')) {\n      return;\n    }\n\n    e.preventDefault();\n    this.show(orig);\n  };\n\n  /**\n   * Handle \"populate\" events.\n   * @api private\n   */\n\n  Page.prototype._onpopstate = (function () {\n    var loaded = false;\n    if ( ! hasWindow ) {\n      return function () {};\n    }\n    if (hasDocument && document.readyState === 'complete') {\n      loaded = true;\n    } else {\n      window.addEventListener('load', function() {\n        setTimeout(function() {\n          loaded = true;\n        }, 0);\n      });\n    }\n    return function onpopstate(e) {\n      if (!loaded) return;\n      var page = this;\n      if (e.state) {\n        var path = e.state.path;\n        page.replace(path, e.state);\n      } else if (isLocation) {\n        var loc = page._window.location;\n        page.show(loc.pathname + loc.search + loc.hash, undefined, undefined, false);\n      }\n    };\n  })();\n\n  /**\n   * Event button.\n   */\n  Page.prototype._which = function(e) {\n    e = e || (hasWindow && this._window.event);\n    return null == e.which ? e.button : e.which;\n  };\n\n  /**\n   * Convert to a URL object\n   * @api private\n   */\n  Page.prototype._toURL = function(href) {\n    var window = this._window;\n    if(typeof URL === 'function' && isLocation) {\n      return new URL(href, window.location.toString());\n    } else if (hasDocument) {\n      var anc = window.document.createElement('a');\n      anc.href = href;\n      return anc;\n    }\n  };\n\n  /**\n   * Check if `href` is the same origin.\n   * @param {string} href\n   * @api public\n   */\n\n  Page.prototype.sameOrigin = function(href) {\n    if(!href || !isLocation) return false;\n\n    var url = this._toURL(href);\n    var window = this._window;\n\n    var loc = window.location;\n    return loc.protocol === url.protocol &&\n      loc.hostname === url.hostname &&\n      loc.port === url.port;\n  };\n\n  /**\n   * @api private\n   */\n  Page.prototype._samePath = function(url) {\n    if(!isLocation) return false;\n    var window = this._window;\n    var loc = window.location;\n    return url.pathname === loc.pathname &&\n      url.search === loc.search;\n  };\n\n  /**\n   * Remove URL encoding from the given `str`.\n   * Accommodates whitespace in both x-www-form-urlencoded\n   * and regular percent-encoded form.\n   *\n   * @param {string} val - URL component to decode\n   * @api private\n   */\n  Page.prototype._decodeURLEncodedURIComponent = function(val) {\n    if (typeof val !== 'string') { return val; }\n    return this._decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n  };\n\n  /**\n   * Create a new `page` instance and function\n   */\n  function createPage() {\n    var pageInstance = new Page();\n\n    function pageFn(/* args */) {\n      return page.apply(pageInstance, arguments);\n    }\n\n    // Copy all of the things over. In 2.0 maybe we use setPrototypeOf\n    pageFn.callbacks = pageInstance.callbacks;\n    pageFn.exits = pageInstance.exits;\n    pageFn.base = pageInstance.base.bind(pageInstance);\n    pageFn.strict = pageInstance.strict.bind(pageInstance);\n    pageFn.start = pageInstance.start.bind(pageInstance);\n    pageFn.stop = pageInstance.stop.bind(pageInstance);\n    pageFn.show = pageInstance.show.bind(pageInstance);\n    pageFn.back = pageInstance.back.bind(pageInstance);\n    pageFn.redirect = pageInstance.redirect.bind(pageInstance);\n    pageFn.replace = pageInstance.replace.bind(pageInstance);\n    pageFn.dispatch = pageInstance.dispatch.bind(pageInstance);\n    pageFn.exit = pageInstance.exit.bind(pageInstance);\n    pageFn.configure = pageInstance.configure.bind(pageInstance);\n    pageFn.sameOrigin = pageInstance.sameOrigin.bind(pageInstance);\n    pageFn.clickHandler = pageInstance.clickHandler.bind(pageInstance);\n\n    pageFn.create = createPage;\n\n    Object.defineProperty(pageFn, 'len', {\n      get: function(){\n        return pageInstance.len;\n      },\n      set: function(val) {\n        pageInstance.len = val;\n      }\n    });\n\n    Object.defineProperty(pageFn, 'current', {\n      get: function(){\n        return pageInstance.current;\n      },\n      set: function(val) {\n        pageInstance.current = val;\n      }\n    });\n\n    // In 2.0 these can be named exports\n    pageFn.Context = Context;\n    pageFn.Route = Route;\n\n    return pageFn;\n  }\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or redirection,\n   * or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page('/from', '/to')\n   *   page();\n   *\n   * @param {string|!Function|!Object} path\n   * @param {Function=} fn\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' === typeof path) {\n      return page.call(this, '*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' === typeof fn) {\n      var route = new Route(/** @type {string} */ (path), null, this);\n      for (var i = 1; i < arguments.length; ++i) {\n        this.callbacks.push(route.middleware(arguments[i]));\n      }\n      // show <path> with [state]\n    } else if ('string' === typeof path) {\n      this['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n      // start [options]\n    } else {\n      this.start(path);\n    }\n  }\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n  function unhandled(ctx) {\n    if (ctx.handled) return;\n    var current;\n    var page = this;\n    var window = page._window;\n\n    if (page._hashbang) {\n      current = isLocation && this._getBase() + window.location.hash.replace('#!', '');\n    } else {\n      current = isLocation && window.location.pathname + window.location.search;\n    }\n\n    if (current === ctx.canonicalPath) return;\n    page.stop();\n    ctx.handled = false;\n    isLocation && (window.location.href = ctx.canonicalPath);\n  }\n\n  /**\n   * Escapes RegExp characters in the given string.\n   *\n   * @param {string} s\n   * @api private\n   */\n  function escapeRegExp(s) {\n    return s.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} state\n   * @api public\n   */\n\n  function Context(path, state, pageInstance) {\n    var _page = this.page = pageInstance || page;\n    var window = _page._window;\n    var hashbang = _page._hashbang;\n\n    var pageBase = _page._getBase();\n    if ('/' === path[0] && 0 !== path.indexOf(pageBase)) path = pageBase + (hashbang ? '#!' : '') + path;\n    var i = path.indexOf('?');\n\n    this.canonicalPath = path;\n    var re = new RegExp('^' + escapeRegExp(pageBase));\n    this.path = path.replace(re, '') || '/';\n    if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\n    this.title = (hasDocument && window.document.title);\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? _page._decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n    this.pathname = _page._decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n    this.params = {};\n\n    // fragment\n    this.hash = '';\n    if (!hashbang) {\n      if (!~this.path.indexOf('#')) return;\n      var parts = this.path.split('#');\n      this.path = this.pathname = parts[0];\n      this.hash = _page._decodeURLEncodedURIComponent(parts[1]) || '';\n      this.querystring = this.querystring.split('#')[0];\n    }\n  }\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function() {\n    var page = this.page;\n    var window = page._window;\n    var hashbang = page._hashbang;\n\n    page.len++;\n    if (hasHistory) {\n        window.history.pushState(this.state, this.title,\n          hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n    }\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function() {\n    var page = this.page;\n    if (hasHistory) {\n        page._window.history.replaceState(this.state, this.title,\n          page._hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n    }\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} options\n   * @api private\n   */\n\n  function Route(path, options, page) {\n    var _page = this.page = page || globalPage;\n    var opts = options || {};\n    opts.strict = opts.strict || page._strict;\n    this.path = (path === '*') ? '(.*)' : path;\n    this.method = 'GET';\n    this.regexp = pathToRegexp_1(this.path, this.keys = [], opts);\n  }\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn) {\n    var self = this;\n    return function(ctx, next) {\n      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n      next();\n    };\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {string} path\n   * @param {Object} params\n   * @return {boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params) {\n    var keys = this.keys,\n      qsIndex = path.indexOf('?'),\n      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n      m = this.regexp.exec(decodeURIComponent(pathname));\n\n    if (!m) return false;\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n      var val = this.page._decodeURLEncodedURIComponent(m[i]);\n      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {\n        params[key.name] = val;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * Module exports.\n   */\n\n  var globalPage = createPage();\n  var page_js = globalPage;\n  var default_1 = globalPage;\n\npage_js.default = default_1;\n\nexport default page_js;\n","import { __decorate } from \"tslib\";\nimport { LitElement, html, property } from 'lit-element';\nimport { styleMap } from 'lit-html/directives/style-map';\nimport page from 'page';\nconst baseSpace = 16;\nexport const tripleBaseSpace = baseSpace * 3;\nexport class JrFamilyTree extends LitElement {\n    constructor() {\n        super();\n        this.data = [];\n        this.mainId = -1;\n        this.themeWidth = 6;\n        this.baseSpace = baseSpace;\n        this.themeColor = 'rgba(125,188,18,0.4';\n        fetch('assets/data.json')\n            .then(data => data.json())\n            .then(data => {\n            this.data = data;\n        });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        page.base('/family-tree');\n        page('/', this.noPerson.bind(this));\n        page('/:id', this.onNavigate.bind(this));\n        page();\n    }\n    onNavigate(context) {\n        const { id } = context.params;\n        document.title = `FT ${id}`;\n        this.mainId = +id;\n    }\n    noPerson() {\n        this.mainId = -1;\n    }\n    render() {\n        if (this.mainId === -1) {\n            return html `\n        <p>Kies een persoon</p>\n      `;\n        }\n        return html `\n      <jr-tree\n        .mainId=${this.mainId}\n        .data=${this.data}\n        style=${styleMap({\n            '--person-border-color': `${this.themeColor}`,\n            '--person-border-width': `${this.themeWidth}px`,\n            '--person-border-style': 'solid',\n            '--person-width': '100px',\n            '--person-height': '100px',\n            '--main-person-width': '125px',\n            '--main-person-height': '125px',\n            '--connect-color': `${this.themeColor}`,\n            '--connect-width': `${this.themeWidth}px`,\n            '--connect-width-half': `${this.themeWidth / 2}px`,\n            '--one-space': `${this.baseSpace}px`,\n            '--triple-space': `${this.baseSpace * 3}px`,\n            '--three-quarter-space': '12px',\n        })}\n      ></jr-tree>\n    `;\n    }\n}\n__decorate([\n    property({ type: Array })\n], JrFamilyTree.prototype, \"data\", void 0);\n__decorate([\n    property({ type: Number })\n], JrFamilyTree.prototype, \"mainId\", void 0);\n__decorate([\n    property({ type: Number })\n], JrFamilyTree.prototype, \"themeWidth\", void 0);\n__decorate([\n    property({ type: Number })\n], JrFamilyTree.prototype, \"baseSpace\", void 0);\n__decorate([\n    property({ type: String })\n], JrFamilyTree.prototype, \"themeColor\", void 0);\n//# sourceMappingURL=JrFamilyTree.js.map","import { __decorate } from \"tslib\";\nimport { LitElement, html, css, property } from 'lit-element';\nimport { tripleBaseSpace } from '../JrFamilyTree';\nexport class JrTree extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.data = [];\n        this.mainId = -1;\n        this.treeContainer = null;\n        this.siblingsContainer = null;\n        this.mainPerson = null;\n    }\n    static get styles() {\n        return css `\n      .tree-container {\n        margin-top: var(--one-space);\n        margin-bottom: var(--one-space);\n      }\n      .tree,\n      .ancestors,\n      .progeny {\n        display: flex;\n        flex-flow: column;\n        align-items: center;\n      }\n      .ancestors-container,\n      .progeny-container {\n        display: flex;\n      }\n      .ancestors {\n        justify-content: flex-end;\n      }\n      .connect {\n        background-color: var(--connect-color);\n      }\n      .vertical {\n        width: var(--connect-width);\n        height: var(--one-space);\n      }\n      .horizontal {\n        height: var(--connect-width);\n      }\n      .ancestors .horizontal {\n        width: 50%;\n      }\n      .horizontal.left {\n        margin-right: var(--connect-width-half);\n        margin-left: 50%;\n        padding-left: var(--connect-width-half);\n      }\n      .ancestors .horizontal.right {\n        margin-right: 50%;\n        margin-left: var(--connect-width-half);\n        padding-left: var(--connect-width-half);\n      }\n      .progeny .horizontal {\n        width: 100%;\n      }\n      .progeny .horizontal.first {\n        margin-right: var(--connect-width-half);\n        margin-left: 50%;\n        padding-left: var(--connect-width-half);\n        width: 50%;\n      }\n      .progeny .horizontal.last {\n        margin-right: 50%;\n        margin-left: var(--connect-width-half);\n        padding-right: var(--connect-width-half);\n        width: 50%;\n      }\n      .progeny .horizontal.single {\n        display: none;\n      }\n      .main-person-container {\n        display: flex;\n        justify-content: center;\n        position: relative;\n      }\n      .siblings-container {\n        position: absolute;\n        right: var(--main-person-width);\n        margin-right: var(--triple-space);\n      }\n      .spouses-container {\n        position: absolute;\n        left: var(--main-person-width);\n        margin-left: var(--triple-space);\n      }\n      jr-main-person {\n      }\n      .siblings,\n      .spouses {\n        display: flex;\n      }\n    `;\n    }\n    static mainPersonTemplate(data, id) {\n        const person = data.find(p => p.id === id);\n        if (!person) {\n            return html `\n        <p>Persoon bestaat niet</p>\n      `;\n        }\n        const hasProgeny = data.find(p => p.fatherId === id || p.motherId === id);\n        const ancestorsVerticalConnect = html `\n      <div class=\"ancestor vertical connect\"></div>\n    `;\n        return html `\n      <div class=\"tree-container\">\n        <div class=\"tree\">\n          <div class=\"ancestors-container\">${JrTree.ancestors(data, person)}</div>\n          ${person.fatherId || person.motherId ? ancestorsVerticalConnect : html ``}\n          <div class=\"main-person-container\">\n            <div class=\"siblings-container\">\n              ${JrTree.siblingsTemplate(data, person)}\n            </div>\n            <jr-main-person .person=\"${person}\"></jr-main-person>\n            <div class=\"spouses-container\">\n              ${JrTree.spousesTemplate(data, person)}\n            </div>\n          </div>\n          ${hasProgeny\n            ? html `\n                <div class=\"progeny vertical connect\"></div>\n              `\n            : html ``}\n          <div class=\"progeny-container\">${JrTree.progenyTemplate(data, person, id, '')}</div>\n        </div>\n      </div>\n    `;\n    }\n    static ancestors(data, person) {\n        let father;\n        let mother;\n        if (person.fatherId) {\n            const fatherData = data.find(p => p.id === person.fatherId);\n            father = JrTree.ancestorsTemplate(data, fatherData, 'left');\n        }\n        if (person.motherId) {\n            const motherData = data.find(p => p.id === person.motherId);\n            mother = JrTree.ancestorsTemplate(data, motherData, 'right');\n        }\n        // TODO placeholder voor als persoon alleen vader of alleen moeder heeft\n        // mother = !mother && father ? html`<div>ONBEKEND</div>` : mother\n        // father = !father && mother ? html`<div>ONBEKEND</div>` : father\n        return html `\n      ${father}${mother}\n    `;\n    }\n    static ancestorsTemplate(data, person, leftOrRight) {\n        const ancestorTemplateResult = JrTree.ancestors(data, person);\n        const ancestorVerticalConnectTop = ancestorTemplateResult.values.includes(undefined)\n            ? html ``\n            : html `\n          <div class=\"ancestor vertical connect\"></div>\n        `;\n        return html `\n      <div class=\"ancestors\">\n        <div class=\"ancestors-container\">${ancestorTemplateResult}</div>\n        ${ancestorVerticalConnectTop}\n        <jr-person .person=${person}></jr-person>\n        <div class=\"connect vertical\"></div>\n        <div class=\"connect horizontal ${leftOrRight}\"></div>\n      </div>\n    `;\n    }\n    static progenyTemplate(data, person, mainId, position) {\n        const progenyTemplateResult = data\n            .filter(p => p.fatherId === person.id || p.motherId === person.id)\n            .sort((p1, p2) => +p1.dateOfBirth.substring(0, 4) - +p2.dateOfBirth.substring(0, 4))\n            .map((p, index, pArray) => {\n            // const nextPosition = pArray.length === 1 ? 'single' : (index === 0 ? 'first' : (index === pArray.length - 1 ? 'last' : ''));\n            let nextPosition;\n            if (pArray.length === 1) {\n                nextPosition = 'single';\n            }\n            else if (index === 0) {\n                nextPosition = 'first';\n            }\n            else if (index === pArray.length - 1) {\n                nextPosition = 'last';\n            }\n            else {\n                nextPosition = '';\n            }\n            return JrTree.progenyTemplate(data, p, mainId, nextPosition);\n        });\n        const progeny = person.id === mainId\n            ? html `\n            ${progenyTemplateResult}\n          `\n            : html `\n            <div class=\"progeny\">\n              <div class=\"connect horizontal ${position}\"></div>\n              <div class=\"vertical connect\"></div>\n              <jr-person .person=${person}></jr-person>\n              ${progenyTemplateResult.length\n                ? html `\n                    <div class=\"progeny vertical connect\"></div>\n                  `\n                : html ``}\n              <div class=\"progeny-container\">${progenyTemplateResult}</div>\n            </div>\n          `;\n        return progeny;\n    }\n    static spousesTemplate(data, person) {\n        const spousesIds = JSON.parse(person.marriedWith);\n        const spouses = spousesIds.map((spouse) => {\n            const spousePerson = data.find(p => p.id === spouse);\n            return html `\n        <jr-person .person=\"${spousePerson}\"></jr-person>\n      `;\n        });\n        return html `\n      <div class=\"spouses\">${spouses}</div>\n    `;\n    }\n    static siblingsTemplate(data, person) {\n        const siblings = data\n            .filter(p => (p.motherId && p.motherId === person.motherId) ||\n            (p.fatherId && p.fatherId === person.fatherId))\n            .map(sibling => html `\n            <jr-person .person=\"${sibling}\"></jr-person>\n          `);\n        return html `\n      <div class=\"siblings\">${siblings}</div>\n    `;\n    }\n    setElementRefs() {\n        const shadow = this.shadowRoot;\n        if (shadow) {\n            this.treeContainer = shadow.querySelector('.tree-container');\n            this.siblingsContainer = shadow.querySelector('.siblings-container');\n            this.mainPerson = shadow.querySelector('jr-main-person');\n        }\n    }\n    render() {\n        this.updateComplete.then(() => {\n            let siblingsWidth = 0;\n            if (!this.siblingsContainer) {\n                this.setElementRefs();\n            }\n            if (this.siblingsContainer) {\n                siblingsWidth = this.siblingsContainer.offsetWidth + tripleBaseSpace * 2;\n            }\n            if (this.treeContainer) {\n                if (siblingsWidth > +this.treeContainer.style.width / 2) {\n                    const currentWidth = this.treeContainer.offsetWidth;\n                    this.treeContainer.style.marginLeft = `${siblingsWidth -\n                        this.treeContainer.offsetWidth / 2}px`;\n                    this.treeContainer.style.width = `${currentWidth}px`;\n                }\n            }\n        });\n        return html `\n      <h1>Stamboom</h1>\n      ${JrTree.mainPersonTemplate(this.data, this.mainId)}\n    `;\n    }\n}\n__decorate([\n    property({ type: Array })\n], JrTree.prototype, \"data\", void 0);\n__decorate([\n    property({ type: Number })\n], JrTree.prototype, \"mainId\", void 0);\n//# sourceMappingURL=JrTree.js.map","import { __decorate } from \"tslib\";\nimport { LitElement, html, css, property } from 'lit-element';\nexport class JrMainPerson extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.person = {};\n    }\n    static get styles() {\n        return css `\n      .person.main {\n        display: flex;\n        flex-flow: column;\n        height: var(--main-person-height);\n        width: var(--main-person-width);\n        border-style: var(--person-border-style);\n        border-color: var(--person-border-color);\n        border-width: var(--three-quarter-space);\n        margin-left: var(--one-space);\n        margin-right: var(--one-space);\n      }\n    `;\n    }\n    static isPerson(person) {\n        return person.id !== undefined;\n    }\n    render() {\n        if (JrMainPerson.isPerson(this.person)) {\n            return html `\n        <div class=\"person main\">\n          ${this.person.firstNames} ${this.person.surname} ${this.person.dateOfBirth}\n        </div>\n      `;\n        }\n        return html ``;\n    }\n}\n__decorate([\n    property({ type: Object })\n], JrMainPerson.prototype, \"person\", void 0);\n//# sourceMappingURL=JrMainPerson.js.map","import { __decorate } from \"tslib\";\nimport { LitElement, html, css, property } from 'lit-element';\nexport class JrPerson extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.person = {};\n    }\n    static get styles() {\n        return css `\n      .person {\n        display: flex;\n        flex-flow: column;\n        height: var(--person-height);\n        width: var(--person-width);\n        border-style: var(--person-border-style);\n        border-width: var(--person-border-width);\n        border-color: var(--person-border-color);\n        margin-left: var(--one-space);\n        margin-right: var(--one-space);\n      }\n    `;\n    }\n    static isPerson(person) {\n        return person.id !== undefined;\n    }\n    render() {\n        if (JrPerson.isPerson(this.person)) {\n            return html `\n        <a href=${this.person.id} class=\"person\">\n          <div>${this.person.firstNames} ${this.person.surname}</div>\n          <div>${this.person.dateOfBirth}</div>\n        </a>\n      `;\n        }\n        return html ``;\n    }\n}\n__decorate([\n    property({ type: Object })\n], JrPerson.prototype, \"person\", void 0);\n//# sourceMappingURL=JrPerson.js.map","import { JrFamilyTree } from './JrFamilyTree';\nimport { JrTree } from './components/JrTree';\nimport { JrMainPerson } from './components/JrMainPerson';\nimport { JrPerson } from './components/JrPerson';\ncustomElements.define('jr-family-tree', JrFamilyTree);\ncustomElements.define('jr-tree', JrTree);\ncustomElements.define('jr-main-person', JrMainPerson);\ncustomElements.define('jr-person', JrPerson);\n//# sourceMappingURL=jr-family-tree.js.map"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","[object Object]","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","this","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","super","eventOptionsSupported","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_reflectingProperties","initialize","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","_options","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","standardProperty","kind","assign","clazz","placement","initializer","property","protoOrDescriptor","proto","legacyProperty","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","_styles","addStyles","reduceRight","unshift","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","litRender","delete","previousStylePropertyCache","styleMap","f","styleInfo","previousStyleProperties","removeProperty","setProperty","args","isarray","arr","toString","pathToRegexp_1","pathToRegexp","parse_1","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","path","m","escaped","offset","group","asterisk","repeat","optional","delimiter","pattern","escapeGroup","matches","obj","token","segment","TypeError","j","encodeURIComponent","test","escapeString","replace","attachKeys","re","keys","flags","sensitive","strict","route","lastToken","endsWithSlash","groups","source","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","loaded","hasDocument","hasWindow","hasHistory","history","hasProcess","process","clickEvent","ontouchstart","isLocation","location","Page","callbacks","exits","current","len","_decodeURLComponents","_base","_strict","_running","_hashbang","clickHandler","bind","_onpopstate","page","fn","Route","middleware","unhandled","ctx","handled","_window","_getBase","hash","pathname","search","canonicalPath","stop","href","Context","state","pageInstance","_page","hashbang","pageBase","title","querystring","_decodeURLEncodedURIComponent","params","globalPage","opts","method","regexp","configure","decodeURLComponents","_popstate","popstate","_click","click","base","loc","protocol","enable","dispatch","url","show","prev","prevContext","pushState","back","setTimeout","redirect","to","inst","init","save","nextEnter","nextExit","exit","_which","metaKey","ctrlKey","shiftKey","defaultPrevented","el","eventPath","composedPath","toUpperCase","svg","hasAttribute","link","_samePath","baseVal","sameOrigin","orig","preventDefault","readyState","which","button","_toURL","URL","anc","hostname","port","val","decodeURIComponent","replaceState","self","next","qsIndex","createPage","pageFn","apply","create","page_js","default_1","default","JrFamilyTree","mainId","themeWidth","baseSpace","themeColor","fetch","then","json","noPerson","onNavigate","context","id","JrTree","treeContainer","siblingsContainer","mainPerson","person","find","hasProgeny","fatherId","motherId","ancestorsVerticalConnect","ancestors","siblingsTemplate","spousesTemplate","progenyTemplate","father","mother","fatherData","ancestorsTemplate","motherData","leftOrRight","ancestorTemplateResult","ancestorVerticalConnectTop","includes","position","progenyTemplateResult","filter","sort","p1","p2","dateOfBirth","substring","pArray","nextPosition","spouses","marriedWith","spouse","spousePerson","siblings","sibling","shadow","shadowRoot","siblingsWidth","setElementRefs","offsetWidth","tripleBaseSpace","width","currentWidth","marginLeft","mainPersonTemplate","JrMainPerson","isPerson","firstNames","surname","JrPerson","define"],"mappings":"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"}